// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auth.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Api.V2.Auth {

  /// <summary>Holder for reflection information generated from auth.proto</summary>
  public static partial class AuthReflection {

    #region Descriptor
    /// <summary>File descriptor for auth.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgphdXRoLnByb3RvEhFlbnZveS5hcGkudjIuYXV0aBocZW52b3kvYXBpL3Yy",
            "L2F1dGgvY2VydC5wcm90bxoUZ29nb3Byb3RvL2dvZ28ucHJvdG8iwQQKCkF1",
            "dGhBY3Rpb24SPQoLYWN0aW9uX3R5cGUYASABKA4yKC5lbnZveS5hcGkudjIu",
            "YXV0aC5BdXRoQWN0aW9uLkFjdGlvblR5cGUSMQoFcnVsZXMYAiADKAsyIi5l",
            "bnZveS5hcGkudjIuYXV0aC5BdXRoQWN0aW9uLlJ1bGUaPAoHQW5kUnVsZRIx",
            "CgVydWxlcxgBIAMoCzIiLmVudm95LmFwaS52Mi5hdXRoLkF1dGhBY3Rpb24u",
            "UnVsZRo7CgZPclJ1bGUSMQoFcnVsZXMYASADKAsyIi5lbnZveS5hcGkudjIu",
            "YXV0aC5BdXRoQWN0aW9uLlJ1bGUaVwoIWDUwOVJ1bGUSSwoSdmFsaWRhdGlv",
            "bl9jb250ZXh0GAMgASgLMi8uZW52b3kuYXBpLnYyLmF1dGguQ2VydGlmaWNh",
            "dGVWYWxpZGF0aW9uQ29udGV4dBrJAQoEUnVsZRI5CghhbmRfcnVsZRgBIAEo",
            "CzIlLmVudm95LmFwaS52Mi5hdXRoLkF1dGhBY3Rpb24uQW5kUnVsZUgAEjcK",
            "B29yX3J1bGUYAiABKAsyJC5lbnZveS5hcGkudjIuYXV0aC5BdXRoQWN0aW9u",
            "Lk9yUnVsZUgAEjsKCXg1MDlfcnVsZRgDIAEoCzImLmVudm95LmFwaS52Mi5h",
            "dXRoLkF1dGhBY3Rpb24uWDUwOVJ1bGVIAEIQCg5ydWxlX3NwZWNpZmllciIh",
            "CgpBY3Rpb25UeXBlEgkKBUFMTE9XEAASCAoEREVOWRABQgpaBGF1dGio4h4B",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Api.V2.Auth.CertReflection.Descriptor, global::Gogoproto.GogoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.Auth.AuthAction), global::Envoy.Api.V2.Auth.AuthAction.Parser, new[]{ "ActionType", "Rules" }, null, new[]{ typeof(global::Envoy.Api.V2.Auth.AuthAction.Types.ActionType) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.Auth.AuthAction.Types.AndRule), global::Envoy.Api.V2.Auth.AuthAction.Types.AndRule.Parser, new[]{ "Rules" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.Auth.AuthAction.Types.OrRule), global::Envoy.Api.V2.Auth.AuthAction.Types.OrRule.Parser, new[]{ "Rules" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.Auth.AuthAction.Types.X509Rule), global::Envoy.Api.V2.Auth.AuthAction.Types.X509Rule.Parser, new[]{ "ValidationContext" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.Auth.AuthAction.Types.Rule), global::Envoy.Api.V2.Auth.AuthAction.Types.Rule.Parser, new[]{ "AndRule", "OrRule", "X509Rule" }, new[]{ "RuleSpecifier" }, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AuthAction : pb::IMessage<AuthAction> {
    private static readonly pb::MessageParser<AuthAction> _parser = new pb::MessageParser<AuthAction>(() => new AuthAction());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Api.V2.Auth.AuthReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthAction(AuthAction other) : this() {
      actionType_ = other.actionType_;
      rules_ = other.rules_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthAction Clone() {
      return new AuthAction(this);
    }

    /// <summary>Field number for the "action_type" field.</summary>
    public const int ActionTypeFieldNumber = 1;
    private global::Envoy.Api.V2.Auth.AuthAction.Types.ActionType actionType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Api.V2.Auth.AuthAction.Types.ActionType ActionType {
      get { return actionType_; }
      set {
        actionType_ = value;
      }
    }

    /// <summary>Field number for the "rules" field.</summary>
    public const int RulesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Envoy.Api.V2.Auth.AuthAction.Types.Rule> _repeated_rules_codec
        = pb::FieldCodec.ForMessage(18, global::Envoy.Api.V2.Auth.AuthAction.Types.Rule.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Api.V2.Auth.AuthAction.Types.Rule> rules_ = new pbc::RepeatedField<global::Envoy.Api.V2.Auth.AuthAction.Types.Rule>();
    /// <summary>
    /// List of rules
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Envoy.Api.V2.Auth.AuthAction.Types.Rule> Rules {
      get { return rules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActionType != other.ActionType) return false;
      if(!rules_.Equals(other.rules_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActionType != 0) hash ^= ActionType.GetHashCode();
      hash ^= rules_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActionType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ActionType);
      }
      rules_.WriteTo(output, _repeated_rules_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActionType);
      }
      size += rules_.CalculateSize(_repeated_rules_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthAction other) {
      if (other == null) {
        return;
      }
      if (other.ActionType != 0) {
        ActionType = other.ActionType;
      }
      rules_.Add(other.rules_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            actionType_ = (global::Envoy.Api.V2.Auth.AuthAction.Types.ActionType) input.ReadEnum();
            break;
          }
          case 18: {
            rules_.AddEntriesFrom(input, _repeated_rules_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AuthAction message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Should we do white-list or black-list style access control.
      /// </summary>
      public enum ActionType {
        /// <summary>
        /// Request matches all rules are allowed, otherwise denied.
        /// </summary>
        [pbr::OriginalName("ALLOW")] Allow = 0,
        /// <summary>
        /// Request matches all rules or missing required auth fields are denied,
        /// otherwise allowed.
        /// </summary>
        [pbr::OriginalName("DENY")] Deny = 1,
      }

      /// <summary>
      /// Logic AND that requires all rules match.
      /// </summary>
      public sealed partial class AndRule : pb::IMessage<AndRule> {
        private static readonly pb::MessageParser<AndRule> _parser = new pb::MessageParser<AndRule>(() => new AndRule());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AndRule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Api.V2.Auth.AuthAction.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AndRule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AndRule(AndRule other) : this() {
          rules_ = other.rules_.Clone();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AndRule Clone() {
          return new AndRule(this);
        }

        /// <summary>Field number for the "rules" field.</summary>
        public const int RulesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Envoy.Api.V2.Auth.AuthAction.Types.Rule> _repeated_rules_codec
            = pb::FieldCodec.ForMessage(10, global::Envoy.Api.V2.Auth.AuthAction.Types.Rule.Parser);
        private readonly pbc::RepeatedField<global::Envoy.Api.V2.Auth.AuthAction.Types.Rule> rules_ = new pbc::RepeatedField<global::Envoy.Api.V2.Auth.AuthAction.Types.Rule>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Envoy.Api.V2.Auth.AuthAction.Types.Rule> Rules {
          get { return rules_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AndRule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AndRule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!rules_.Equals(other.rules_)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= rules_.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          rules_.WriteTo(output, _repeated_rules_codec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += rules_.CalculateSize(_repeated_rules_codec);
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AndRule other) {
          if (other == null) {
            return;
          }
          rules_.Add(other.rules_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                rules_.AddEntriesFrom(input, _repeated_rules_codec);
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Logic OR that requires at least one rule matches.
      /// </summary>
      public sealed partial class OrRule : pb::IMessage<OrRule> {
        private static readonly pb::MessageParser<OrRule> _parser = new pb::MessageParser<OrRule>(() => new OrRule());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<OrRule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Api.V2.Auth.AuthAction.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrRule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrRule(OrRule other) : this() {
          rules_ = other.rules_.Clone();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OrRule Clone() {
          return new OrRule(this);
        }

        /// <summary>Field number for the "rules" field.</summary>
        public const int RulesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Envoy.Api.V2.Auth.AuthAction.Types.Rule> _repeated_rules_codec
            = pb::FieldCodec.ForMessage(10, global::Envoy.Api.V2.Auth.AuthAction.Types.Rule.Parser);
        private readonly pbc::RepeatedField<global::Envoy.Api.V2.Auth.AuthAction.Types.Rule> rules_ = new pbc::RepeatedField<global::Envoy.Api.V2.Auth.AuthAction.Types.Rule>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Envoy.Api.V2.Auth.AuthAction.Types.Rule> Rules {
          get { return rules_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as OrRule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(OrRule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!rules_.Equals(other.rules_)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= rules_.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          rules_.WriteTo(output, _repeated_rules_codec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += rules_.CalculateSize(_repeated_rules_codec);
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(OrRule other) {
          if (other == null) {
            return;
          }
          rules_.Add(other.rules_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                rules_.AddEntriesFrom(input, _repeated_rules_codec);
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Check peer identity using X.509 certificate.
      /// </summary>
      public sealed partial class X509Rule : pb::IMessage<X509Rule> {
        private static readonly pb::MessageParser<X509Rule> _parser = new pb::MessageParser<X509Rule>(() => new X509Rule());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<X509Rule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Api.V2.Auth.AuthAction.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public X509Rule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public X509Rule(X509Rule other) : this() {
          ValidationContext = other.validationContext_ != null ? other.ValidationContext.Clone() : null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public X509Rule Clone() {
          return new X509Rule(this);
        }

        /// <summary>Field number for the "validation_context" field.</summary>
        public const int ValidationContextFieldNumber = 3;
        private global::Envoy.Api.V2.Auth.CertificateValidationContext validationContext_;
        /// <summary>
        /// How to validate peer certificates.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Envoy.Api.V2.Auth.CertificateValidationContext ValidationContext {
          get { return validationContext_; }
          set {
            validationContext_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as X509Rule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(X509Rule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ValidationContext, other.ValidationContext)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (validationContext_ != null) hash ^= ValidationContext.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (validationContext_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(ValidationContext);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (validationContext_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ValidationContext);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(X509Rule other) {
          if (other == null) {
            return;
          }
          if (other.validationContext_ != null) {
            if (validationContext_ == null) {
              validationContext_ = new global::Envoy.Api.V2.Auth.CertificateValidationContext();
            }
            ValidationContext.MergeFrom(other.ValidationContext);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 26: {
                if (validationContext_ == null) {
                  validationContext_ = new global::Envoy.Api.V2.Auth.CertificateValidationContext();
                }
                input.ReadMessage(validationContext_);
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Element type of AndRule/OrRule, it chooses among different type of rule.
      /// </summary>
      public sealed partial class Rule : pb::IMessage<Rule> {
        private static readonly pb::MessageParser<Rule> _parser = new pb::MessageParser<Rule>(() => new Rule());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Rule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Api.V2.Auth.AuthAction.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rule(Rule other) : this() {
          switch (other.RuleSpecifierCase) {
            case RuleSpecifierOneofCase.AndRule:
              AndRule = other.AndRule.Clone();
              break;
            case RuleSpecifierOneofCase.OrRule:
              OrRule = other.OrRule.Clone();
              break;
            case RuleSpecifierOneofCase.X509Rule:
              X509Rule = other.X509Rule.Clone();
              break;
          }

        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rule Clone() {
          return new Rule(this);
        }

        /// <summary>Field number for the "and_rule" field.</summary>
        public const int AndRuleFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Envoy.Api.V2.Auth.AuthAction.Types.AndRule AndRule {
          get { return ruleSpecifierCase_ == RuleSpecifierOneofCase.AndRule ? (global::Envoy.Api.V2.Auth.AuthAction.Types.AndRule) ruleSpecifier_ : null; }
          set {
            ruleSpecifier_ = value;
            ruleSpecifierCase_ = value == null ? RuleSpecifierOneofCase.None : RuleSpecifierOneofCase.AndRule;
          }
        }

        /// <summary>Field number for the "or_rule" field.</summary>
        public const int OrRuleFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Envoy.Api.V2.Auth.AuthAction.Types.OrRule OrRule {
          get { return ruleSpecifierCase_ == RuleSpecifierOneofCase.OrRule ? (global::Envoy.Api.V2.Auth.AuthAction.Types.OrRule) ruleSpecifier_ : null; }
          set {
            ruleSpecifier_ = value;
            ruleSpecifierCase_ = value == null ? RuleSpecifierOneofCase.None : RuleSpecifierOneofCase.OrRule;
          }
        }

        /// <summary>Field number for the "x509_rule" field.</summary>
        public const int X509RuleFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Envoy.Api.V2.Auth.AuthAction.Types.X509Rule X509Rule {
          get { return ruleSpecifierCase_ == RuleSpecifierOneofCase.X509Rule ? (global::Envoy.Api.V2.Auth.AuthAction.Types.X509Rule) ruleSpecifier_ : null; }
          set {
            ruleSpecifier_ = value;
            ruleSpecifierCase_ = value == null ? RuleSpecifierOneofCase.None : RuleSpecifierOneofCase.X509Rule;
          }
        }

        private object ruleSpecifier_;
        /// <summary>Enum of possible cases for the "rule_specifier" oneof.</summary>
        public enum RuleSpecifierOneofCase {
          None = 0,
          AndRule = 1,
          OrRule = 2,
          X509Rule = 3,
        }
        private RuleSpecifierOneofCase ruleSpecifierCase_ = RuleSpecifierOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RuleSpecifierOneofCase RuleSpecifierCase {
          get { return ruleSpecifierCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearRuleSpecifier() {
          ruleSpecifierCase_ = RuleSpecifierOneofCase.None;
          ruleSpecifier_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Rule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Rule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(AndRule, other.AndRule)) return false;
          if (!object.Equals(OrRule, other.OrRule)) return false;
          if (!object.Equals(X509Rule, other.X509Rule)) return false;
          if (RuleSpecifierCase != other.RuleSpecifierCase) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ruleSpecifierCase_ == RuleSpecifierOneofCase.AndRule) hash ^= AndRule.GetHashCode();
          if (ruleSpecifierCase_ == RuleSpecifierOneofCase.OrRule) hash ^= OrRule.GetHashCode();
          if (ruleSpecifierCase_ == RuleSpecifierOneofCase.X509Rule) hash ^= X509Rule.GetHashCode();
          hash ^= (int) ruleSpecifierCase_;
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ruleSpecifierCase_ == RuleSpecifierOneofCase.AndRule) {
            output.WriteRawTag(10);
            output.WriteMessage(AndRule);
          }
          if (ruleSpecifierCase_ == RuleSpecifierOneofCase.OrRule) {
            output.WriteRawTag(18);
            output.WriteMessage(OrRule);
          }
          if (ruleSpecifierCase_ == RuleSpecifierOneofCase.X509Rule) {
            output.WriteRawTag(26);
            output.WriteMessage(X509Rule);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ruleSpecifierCase_ == RuleSpecifierOneofCase.AndRule) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AndRule);
          }
          if (ruleSpecifierCase_ == RuleSpecifierOneofCase.OrRule) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrRule);
          }
          if (ruleSpecifierCase_ == RuleSpecifierOneofCase.X509Rule) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(X509Rule);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Rule other) {
          if (other == null) {
            return;
          }
          switch (other.RuleSpecifierCase) {
            case RuleSpecifierOneofCase.AndRule:
              if (AndRule == null) {
                AndRule = new global::Envoy.Api.V2.Auth.AuthAction.Types.AndRule();
              }
              AndRule.MergeFrom(other.AndRule);
              break;
            case RuleSpecifierOneofCase.OrRule:
              if (OrRule == null) {
                OrRule = new global::Envoy.Api.V2.Auth.AuthAction.Types.OrRule();
              }
              OrRule.MergeFrom(other.OrRule);
              break;
            case RuleSpecifierOneofCase.X509Rule:
              if (X509Rule == null) {
                X509Rule = new global::Envoy.Api.V2.Auth.AuthAction.Types.X509Rule();
              }
              X509Rule.MergeFrom(other.X509Rule);
              break;
          }

        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                global::Envoy.Api.V2.Auth.AuthAction.Types.AndRule subBuilder = new global::Envoy.Api.V2.Auth.AuthAction.Types.AndRule();
                if (ruleSpecifierCase_ == RuleSpecifierOneofCase.AndRule) {
                  subBuilder.MergeFrom(AndRule);
                }
                input.ReadMessage(subBuilder);
                AndRule = subBuilder;
                break;
              }
              case 18: {
                global::Envoy.Api.V2.Auth.AuthAction.Types.OrRule subBuilder = new global::Envoy.Api.V2.Auth.AuthAction.Types.OrRule();
                if (ruleSpecifierCase_ == RuleSpecifierOneofCase.OrRule) {
                  subBuilder.MergeFrom(OrRule);
                }
                input.ReadMessage(subBuilder);
                OrRule = subBuilder;
                break;
              }
              case 26: {
                global::Envoy.Api.V2.Auth.AuthAction.Types.X509Rule subBuilder = new global::Envoy.Api.V2.Auth.AuthAction.Types.X509Rule();
                if (ruleSpecifierCase_ == RuleSpecifierOneofCase.X509Rule) {
                  subBuilder.MergeFrom(X509Rule);
                }
                input.ReadMessage(subBuilder);
                X509Rule = subBuilder;
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
