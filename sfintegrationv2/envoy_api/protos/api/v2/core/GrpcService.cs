// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc_service.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Api.V2.Core {

  /// <summary>Holder for reflection information generated from grpc_service.proto</summary>
  public static partial class GrpcServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for grpc_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GrpcServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJncnBjX3NlcnZpY2UucHJvdG8SEWVudm95LmFwaS52Mi5jb3JlGhxlbnZv",
            "eS9hcGkvdjIvY29yZS9iYXNlLnByb3RvGh5nb29nbGUvcHJvdG9idWYvZHVy",
            "YXRpb24ucHJvdG8aHGdvb2dsZS9wcm90b2J1Zi9zdHJ1Y3QucHJvdG8aF3Zh",
            "bGlkYXRlL3ZhbGlkYXRlLnByb3RvGhRnb2dvcHJvdG8vZ29nby5wcm90byKC",
            "BgoLR3JwY1NlcnZpY2USPgoKZW52b3lfZ3JwYxgBIAEoCzIoLmVudm95LmFw",
            "aS52Mi5jb3JlLkdycGNTZXJ2aWNlLkVudm95R3JwY0gAEkAKC2dvb2dsZV9n",
            "cnBjGAIgASgLMikuZW52b3kuYXBpLnYyLmNvcmUuR3JwY1NlcnZpY2UuR29v",
            "Z2xlR3JwY0gAEioKB3RpbWVvdXQYAyABKAsyGS5nb29nbGUucHJvdG9idWYu",
            "RHVyYXRpb24SPwoLY3JlZGVudGlhbHMYBCADKAsyKi5lbnZveS5hcGkudjIu",
            "Y29yZS5HcnBjU2VydmljZS5DcmVkZW50aWFscxosCglFbnZveUdycGMSHwoM",
            "Y2x1c3Rlcl9uYW1lGAEgASgJQgm66cADBHICIAEa9AIKCkdvb2dsZUdycGMS",
            "HQoKdGFyZ2V0X3VyaRgBIAEoCUIJuunAAwRyAiABElEKD3NzbF9jcmVkZW50",
            "aWFscxgCIAEoCzI4LmVudm95LmFwaS52Mi5jb3JlLkdycGNTZXJ2aWNlLkdv",
            "b2dsZUdycGMuU3NsQ3JlZGVudGlhbHMSHgoLc3RhdF9wcmVmaXgYAyABKAlC",
            "CbrpwAMEcgIgARInCgZjb25maWcYBCABKAsyFy5nb29nbGUucHJvdG9idWYu",
            "U3RydWN0GqoBCg5Tc2xDcmVkZW50aWFscxIxCgpyb290X2NlcnRzGAEgASgL",
            "Mh0uZW52b3kuYXBpLnYyLmNvcmUuRGF0YVNvdXJjZRIyCgtwcml2YXRlX2tl",
            "eRgCIAEoCzIdLmVudm95LmFwaS52Mi5jb3JlLkRhdGFTb3VyY2USMQoKY2Vy",
            "dF9jaGFpbhgDIAEoCzIdLmVudm95LmFwaS52Mi5jb3JlLkRhdGFTb3VyY2Ua",
            "RAoLQ3JlZGVudGlhbHMSFgoMYWNjZXNzX3Rva2VuGAEgASgJSABCHQoUY3Jl",
            "ZGVudGlhbF9zcGVjaWZpZXISBbjpwAMBQhkKEHRhcmdldF9zcGVjaWZpZXIS",
            "BbjpwAMBQgSo4h4BYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Api.V2.Core.BaseReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, global::Gogoproto.GogoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.Core.GrpcService), global::Envoy.Api.V2.Core.GrpcService.Parser, new[]{ "EnvoyGrpc", "GoogleGrpc", "Timeout", "Credentials" }, new[]{ "TargetSpecifier" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.Core.GrpcService.Types.EnvoyGrpc), global::Envoy.Api.V2.Core.GrpcService.Types.EnvoyGrpc.Parser, new[]{ "ClusterName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.Core.GrpcService.Types.GoogleGrpc), global::Envoy.Api.V2.Core.GrpcService.Types.GoogleGrpc.Parser, new[]{ "TargetUri", "SslCredentials", "StatPrefix", "Config" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.Core.GrpcService.Types.GoogleGrpc.Types.SslCredentials), global::Envoy.Api.V2.Core.GrpcService.Types.GoogleGrpc.Types.SslCredentials.Parser, new[]{ "RootCerts", "PrivateKey", "CertChain" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.Core.GrpcService.Types.Credentials), global::Envoy.Api.V2.Core.GrpcService.Types.Credentials.Parser, new[]{ "AccessToken" }, new[]{ "CredentialSpecifier" }, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// gRPC service configuration. This is used by :ref:`ApiConfigSource
  /// &lt;envoy_api_msg_core.ApiConfigSource>` and filter configurations.
  /// </summary>
  public sealed partial class GrpcService : pb::IMessage<GrpcService> {
    private static readonly pb::MessageParser<GrpcService> _parser = new pb::MessageParser<GrpcService>(() => new GrpcService());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcService> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Api.V2.Core.GrpcServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcService() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcService(GrpcService other) : this() {
      Timeout = other.timeout_ != null ? other.Timeout.Clone() : null;
      credentials_ = other.credentials_.Clone();
      switch (other.TargetSpecifierCase) {
        case TargetSpecifierOneofCase.EnvoyGrpc:
          EnvoyGrpc = other.EnvoyGrpc.Clone();
          break;
        case TargetSpecifierOneofCase.GoogleGrpc:
          GoogleGrpc = other.GoogleGrpc.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcService Clone() {
      return new GrpcService(this);
    }

    /// <summary>Field number for the "envoy_grpc" field.</summary>
    public const int EnvoyGrpcFieldNumber = 1;
    /// <summary>
    /// Envoy's in-built gRPC client.
    /// See the :ref:`gRPC services overview &lt;arch_overview_grpc_services>`
    /// documentation for discussion on gRPC client selection.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Api.V2.Core.GrpcService.Types.EnvoyGrpc EnvoyGrpc {
      get { return targetSpecifierCase_ == TargetSpecifierOneofCase.EnvoyGrpc ? (global::Envoy.Api.V2.Core.GrpcService.Types.EnvoyGrpc) targetSpecifier_ : null; }
      set {
        targetSpecifier_ = value;
        targetSpecifierCase_ = value == null ? TargetSpecifierOneofCase.None : TargetSpecifierOneofCase.EnvoyGrpc;
      }
    }

    /// <summary>Field number for the "google_grpc" field.</summary>
    public const int GoogleGrpcFieldNumber = 2;
    /// <summary>
    /// `Google C++ gRPC client &lt;https://github.com/grpc/grpc>`_
    /// See the :ref:`gRPC services overview &lt;arch_overview_grpc_services>`
    /// documentation for discussion on gRPC client selection.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Api.V2.Core.GrpcService.Types.GoogleGrpc GoogleGrpc {
      get { return targetSpecifierCase_ == TargetSpecifierOneofCase.GoogleGrpc ? (global::Envoy.Api.V2.Core.GrpcService.Types.GoogleGrpc) targetSpecifier_ : null; }
      set {
        targetSpecifier_ = value;
        targetSpecifierCase_ = value == null ? TargetSpecifierOneofCase.None : TargetSpecifierOneofCase.GoogleGrpc;
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Duration timeout_;
    /// <summary>
    /// The timeout for the gRPC request. This is the timeout for a specific
    /// request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    /// <summary>Field number for the "credentials" field.</summary>
    public const int CredentialsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Envoy.Api.V2.Core.GrpcService.Types.Credentials> _repeated_credentials_codec
        = pb::FieldCodec.ForMessage(34, global::Envoy.Api.V2.Core.GrpcService.Types.Credentials.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Api.V2.Core.GrpcService.Types.Credentials> credentials_ = new pbc::RepeatedField<global::Envoy.Api.V2.Core.GrpcService.Types.Credentials>();
    /// <summary>
    /// A set of credentials that will be composed to form the `channel credentials
    /// &lt;https://grpc.io/docs/guides/auth.html#credential-types>`_.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Envoy.Api.V2.Core.GrpcService.Types.Credentials> Credentials {
      get { return credentials_; }
    }

    private object targetSpecifier_;
    /// <summary>Enum of possible cases for the "target_specifier" oneof.</summary>
    public enum TargetSpecifierOneofCase {
      None = 0,
      EnvoyGrpc = 1,
      GoogleGrpc = 2,
    }
    private TargetSpecifierOneofCase targetSpecifierCase_ = TargetSpecifierOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetSpecifierOneofCase TargetSpecifierCase {
      get { return targetSpecifierCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetSpecifier() {
      targetSpecifierCase_ = TargetSpecifierOneofCase.None;
      targetSpecifier_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcService);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcService other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EnvoyGrpc, other.EnvoyGrpc)) return false;
      if (!object.Equals(GoogleGrpc, other.GoogleGrpc)) return false;
      if (!object.Equals(Timeout, other.Timeout)) return false;
      if(!credentials_.Equals(other.credentials_)) return false;
      if (TargetSpecifierCase != other.TargetSpecifierCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (targetSpecifierCase_ == TargetSpecifierOneofCase.EnvoyGrpc) hash ^= EnvoyGrpc.GetHashCode();
      if (targetSpecifierCase_ == TargetSpecifierOneofCase.GoogleGrpc) hash ^= GoogleGrpc.GetHashCode();
      if (timeout_ != null) hash ^= Timeout.GetHashCode();
      hash ^= credentials_.GetHashCode();
      hash ^= (int) targetSpecifierCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (targetSpecifierCase_ == TargetSpecifierOneofCase.EnvoyGrpc) {
        output.WriteRawTag(10);
        output.WriteMessage(EnvoyGrpc);
      }
      if (targetSpecifierCase_ == TargetSpecifierOneofCase.GoogleGrpc) {
        output.WriteRawTag(18);
        output.WriteMessage(GoogleGrpc);
      }
      if (timeout_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timeout);
      }
      credentials_.WriteTo(output, _repeated_credentials_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (targetSpecifierCase_ == TargetSpecifierOneofCase.EnvoyGrpc) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnvoyGrpc);
      }
      if (targetSpecifierCase_ == TargetSpecifierOneofCase.GoogleGrpc) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GoogleGrpc);
      }
      if (timeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timeout);
      }
      size += credentials_.CalculateSize(_repeated_credentials_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcService other) {
      if (other == null) {
        return;
      }
      if (other.timeout_ != null) {
        if (timeout_ == null) {
          timeout_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Timeout.MergeFrom(other.Timeout);
      }
      credentials_.Add(other.credentials_);
      switch (other.TargetSpecifierCase) {
        case TargetSpecifierOneofCase.EnvoyGrpc:
          if (EnvoyGrpc == null) {
            EnvoyGrpc = new global::Envoy.Api.V2.Core.GrpcService.Types.EnvoyGrpc();
          }
          EnvoyGrpc.MergeFrom(other.EnvoyGrpc);
          break;
        case TargetSpecifierOneofCase.GoogleGrpc:
          if (GoogleGrpc == null) {
            GoogleGrpc = new global::Envoy.Api.V2.Core.GrpcService.Types.GoogleGrpc();
          }
          GoogleGrpc.MergeFrom(other.GoogleGrpc);
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::Envoy.Api.V2.Core.GrpcService.Types.EnvoyGrpc subBuilder = new global::Envoy.Api.V2.Core.GrpcService.Types.EnvoyGrpc();
            if (targetSpecifierCase_ == TargetSpecifierOneofCase.EnvoyGrpc) {
              subBuilder.MergeFrom(EnvoyGrpc);
            }
            input.ReadMessage(subBuilder);
            EnvoyGrpc = subBuilder;
            break;
          }
          case 18: {
            global::Envoy.Api.V2.Core.GrpcService.Types.GoogleGrpc subBuilder = new global::Envoy.Api.V2.Core.GrpcService.Types.GoogleGrpc();
            if (targetSpecifierCase_ == TargetSpecifierOneofCase.GoogleGrpc) {
              subBuilder.MergeFrom(GoogleGrpc);
            }
            input.ReadMessage(subBuilder);
            GoogleGrpc = subBuilder;
            break;
          }
          case 26: {
            if (timeout_ == null) {
              timeout_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(timeout_);
            break;
          }
          case 34: {
            credentials_.AddEntriesFrom(input, _repeated_credentials_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GrpcService message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class EnvoyGrpc : pb::IMessage<EnvoyGrpc> {
        private static readonly pb::MessageParser<EnvoyGrpc> _parser = new pb::MessageParser<EnvoyGrpc>(() => new EnvoyGrpc());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EnvoyGrpc> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Api.V2.Core.GrpcService.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnvoyGrpc() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnvoyGrpc(EnvoyGrpc other) : this() {
          clusterName_ = other.clusterName_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EnvoyGrpc Clone() {
          return new EnvoyGrpc(this);
        }

        /// <summary>Field number for the "cluster_name" field.</summary>
        public const int ClusterNameFieldNumber = 1;
        private string clusterName_ = "";
        /// <summary>
        /// The name of the upstream gRPC cluster. SSL credentials will be supplied
        /// in the :ref:`Cluster &lt;envoy_api_msg_Cluster>` :ref:`tls_context
        /// &lt;envoy_api_field_Cluster.tls_context>`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ClusterName {
          get { return clusterName_; }
          set {
            clusterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EnvoyGrpc);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EnvoyGrpc other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ClusterName != other.ClusterName) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ClusterName.Length != 0) hash ^= ClusterName.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ClusterName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ClusterName);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ClusterName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterName);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EnvoyGrpc other) {
          if (other == null) {
            return;
          }
          if (other.ClusterName.Length != 0) {
            ClusterName = other.ClusterName;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                ClusterName = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class GoogleGrpc : pb::IMessage<GoogleGrpc> {
        private static readonly pb::MessageParser<GoogleGrpc> _parser = new pb::MessageParser<GoogleGrpc>(() => new GoogleGrpc());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GoogleGrpc> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Api.V2.Core.GrpcService.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GoogleGrpc() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GoogleGrpc(GoogleGrpc other) : this() {
          targetUri_ = other.targetUri_;
          SslCredentials = other.sslCredentials_ != null ? other.SslCredentials.Clone() : null;
          statPrefix_ = other.statPrefix_;
          Config = other.config_ != null ? other.Config.Clone() : null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GoogleGrpc Clone() {
          return new GoogleGrpc(this);
        }

        /// <summary>Field number for the "target_uri" field.</summary>
        public const int TargetUriFieldNumber = 1;
        private string targetUri_ = "";
        /// <summary>
        /// The target URI when using the `Google C++ gRPC client
        /// &lt;https://github.com/grpc/grpc>`_. SSL credentials will be supplied in
        /// :ref:`credentials &lt;envoy_api_field_core.GrpcService.credentials>`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TargetUri {
          get { return targetUri_; }
          set {
            targetUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ssl_credentials" field.</summary>
        public const int SslCredentialsFieldNumber = 2;
        private global::Envoy.Api.V2.Core.GrpcService.Types.GoogleGrpc.Types.SslCredentials sslCredentials_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Envoy.Api.V2.Core.GrpcService.Types.GoogleGrpc.Types.SslCredentials SslCredentials {
          get { return sslCredentials_; }
          set {
            sslCredentials_ = value;
          }
        }

        /// <summary>Field number for the "stat_prefix" field.</summary>
        public const int StatPrefixFieldNumber = 3;
        private string statPrefix_ = "";
        /// <summary>
        /// The human readable prefix to use when emitting statistics for the gRPC
        /// service.
        ///
        /// .. csv-table::
        ///    :header: Name, Type, Description
        ///    :widths: 1, 1, 2
        ///
        ///    streams_total, Counter, Total number of streams opened
        ///    streams_closed_&lt;gRPC status code>, Counter, Total streams closed with &lt;gRPC status code>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string StatPrefix {
          get { return statPrefix_; }
          set {
            statPrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "config" field.</summary>
        public const int ConfigFieldNumber = 4;
        private global::Google.Protobuf.WellKnownTypes.Struct config_;
        /// <summary>
        /// Additional configuration for site-specific customizations of the Google
        /// gRPC library.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Struct Config {
          get { return config_; }
          set {
            config_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GoogleGrpc);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GoogleGrpc other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TargetUri != other.TargetUri) return false;
          if (!object.Equals(SslCredentials, other.SslCredentials)) return false;
          if (StatPrefix != other.StatPrefix) return false;
          if (!object.Equals(Config, other.Config)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TargetUri.Length != 0) hash ^= TargetUri.GetHashCode();
          if (sslCredentials_ != null) hash ^= SslCredentials.GetHashCode();
          if (StatPrefix.Length != 0) hash ^= StatPrefix.GetHashCode();
          if (config_ != null) hash ^= Config.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TargetUri.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TargetUri);
          }
          if (sslCredentials_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(SslCredentials);
          }
          if (StatPrefix.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(StatPrefix);
          }
          if (config_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Config);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TargetUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetUri);
          }
          if (sslCredentials_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SslCredentials);
          }
          if (StatPrefix.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StatPrefix);
          }
          if (config_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GoogleGrpc other) {
          if (other == null) {
            return;
          }
          if (other.TargetUri.Length != 0) {
            TargetUri = other.TargetUri;
          }
          if (other.sslCredentials_ != null) {
            if (sslCredentials_ == null) {
              sslCredentials_ = new global::Envoy.Api.V2.Core.GrpcService.Types.GoogleGrpc.Types.SslCredentials();
            }
            SslCredentials.MergeFrom(other.SslCredentials);
          }
          if (other.StatPrefix.Length != 0) {
            StatPrefix = other.StatPrefix;
          }
          if (other.config_ != null) {
            if (config_ == null) {
              config_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            Config.MergeFrom(other.Config);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                TargetUri = input.ReadString();
                break;
              }
              case 18: {
                if (sslCredentials_ == null) {
                  sslCredentials_ = new global::Envoy.Api.V2.Core.GrpcService.Types.GoogleGrpc.Types.SslCredentials();
                }
                input.ReadMessage(sslCredentials_);
                break;
              }
              case 26: {
                StatPrefix = input.ReadString();
                break;
              }
              case 34: {
                if (config_ == null) {
                  config_ = new global::Google.Protobuf.WellKnownTypes.Struct();
                }
                input.ReadMessage(config_);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the GoogleGrpc message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// See https://grpc.io/grpc/cpp/structgrpc_1_1_ssl_credentials_options.html.
          /// </summary>
          public sealed partial class SslCredentials : pb::IMessage<SslCredentials> {
            private static readonly pb::MessageParser<SslCredentials> _parser = new pb::MessageParser<SslCredentials>(() => new SslCredentials());
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<SslCredentials> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Envoy.Api.V2.Core.GrpcService.Types.GoogleGrpc.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SslCredentials() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SslCredentials(SslCredentials other) : this() {
              RootCerts = other.rootCerts_ != null ? other.RootCerts.Clone() : null;
              PrivateKey = other.privateKey_ != null ? other.PrivateKey.Clone() : null;
              CertChain = other.certChain_ != null ? other.CertChain.Clone() : null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public SslCredentials Clone() {
              return new SslCredentials(this);
            }

            /// <summary>Field number for the "root_certs" field.</summary>
            public const int RootCertsFieldNumber = 1;
            private global::Envoy.Api.V2.Core.DataSource rootCerts_;
            /// <summary>
            /// PEM encoded server root certificates.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Envoy.Api.V2.Core.DataSource RootCerts {
              get { return rootCerts_; }
              set {
                rootCerts_ = value;
              }
            }

            /// <summary>Field number for the "private_key" field.</summary>
            public const int PrivateKeyFieldNumber = 2;
            private global::Envoy.Api.V2.Core.DataSource privateKey_;
            /// <summary>
            /// PEM encoded client private key.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Envoy.Api.V2.Core.DataSource PrivateKey {
              get { return privateKey_; }
              set {
                privateKey_ = value;
              }
            }

            /// <summary>Field number for the "cert_chain" field.</summary>
            public const int CertChainFieldNumber = 3;
            private global::Envoy.Api.V2.Core.DataSource certChain_;
            /// <summary>
            /// PEM encoded client certificate chain.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Envoy.Api.V2.Core.DataSource CertChain {
              get { return certChain_; }
              set {
                certChain_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as SslCredentials);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(SslCredentials other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(RootCerts, other.RootCerts)) return false;
              if (!object.Equals(PrivateKey, other.PrivateKey)) return false;
              if (!object.Equals(CertChain, other.CertChain)) return false;
              return true;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (rootCerts_ != null) hash ^= RootCerts.GetHashCode();
              if (privateKey_ != null) hash ^= PrivateKey.GetHashCode();
              if (certChain_ != null) hash ^= CertChain.GetHashCode();
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (rootCerts_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(RootCerts);
              }
              if (privateKey_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(PrivateKey);
              }
              if (certChain_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(CertChain);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (rootCerts_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(RootCerts);
              }
              if (privateKey_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrivateKey);
              }
              if (certChain_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(CertChain);
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(SslCredentials other) {
              if (other == null) {
                return;
              }
              if (other.rootCerts_ != null) {
                if (rootCerts_ == null) {
                  rootCerts_ = new global::Envoy.Api.V2.Core.DataSource();
                }
                RootCerts.MergeFrom(other.RootCerts);
              }
              if (other.privateKey_ != null) {
                if (privateKey_ == null) {
                  privateKey_ = new global::Envoy.Api.V2.Core.DataSource();
                }
                PrivateKey.MergeFrom(other.PrivateKey);
              }
              if (other.certChain_ != null) {
                if (certChain_ == null) {
                  certChain_ = new global::Envoy.Api.V2.Core.DataSource();
                }
                CertChain.MergeFrom(other.CertChain);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 10: {
                    if (rootCerts_ == null) {
                      rootCerts_ = new global::Envoy.Api.V2.Core.DataSource();
                    }
                    input.ReadMessage(rootCerts_);
                    break;
                  }
                  case 18: {
                    if (privateKey_ == null) {
                      privateKey_ = new global::Envoy.Api.V2.Core.DataSource();
                    }
                    input.ReadMessage(privateKey_);
                    break;
                  }
                  case 26: {
                    if (certChain_ == null) {
                      certChain_ = new global::Envoy.Api.V2.Core.DataSource();
                    }
                    input.ReadMessage(certChain_);
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      /// <summary>
      /// gRPC credentials as described at
      /// https://grpc.io/docs/guides/auth.html#credential-types.
      ///
      /// .. note::
      ///
      ///   Credentials are only currently implemented for the Google gRPC client.
      /// </summary>
      public sealed partial class Credentials : pb::IMessage<Credentials> {
        private static readonly pb::MessageParser<Credentials> _parser = new pb::MessageParser<Credentials>(() => new Credentials());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Credentials> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Envoy.Api.V2.Core.GrpcService.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Credentials() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Credentials(Credentials other) : this() {
          switch (other.CredentialSpecifierCase) {
            case CredentialSpecifierOneofCase.AccessToken:
              AccessToken = other.AccessToken;
              break;
          }

        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Credentials Clone() {
          return new Credentials(this);
        }

        /// <summary>Field number for the "access_token" field.</summary>
        public const int AccessTokenFieldNumber = 1;
        /// <summary>
        /// OAuth2 access token, see
        /// https://grpc.io/grpc/cpp/namespacegrpc.html#ad3a80da696ffdaea943f0f858d7a360d.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AccessToken {
          get { return credentialSpecifierCase_ == CredentialSpecifierOneofCase.AccessToken ? (string) credentialSpecifier_ : ""; }
          set {
            credentialSpecifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            credentialSpecifierCase_ = CredentialSpecifierOneofCase.AccessToken;
          }
        }

        private object credentialSpecifier_;
        /// <summary>Enum of possible cases for the "credential_specifier" oneof.</summary>
        public enum CredentialSpecifierOneofCase {
          None = 0,
          AccessToken = 1,
        }
        private CredentialSpecifierOneofCase credentialSpecifierCase_ = CredentialSpecifierOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CredentialSpecifierOneofCase CredentialSpecifierCase {
          get { return credentialSpecifierCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearCredentialSpecifier() {
          credentialSpecifierCase_ = CredentialSpecifierOneofCase.None;
          credentialSpecifier_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Credentials);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Credentials other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AccessToken != other.AccessToken) return false;
          if (CredentialSpecifierCase != other.CredentialSpecifierCase) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (credentialSpecifierCase_ == CredentialSpecifierOneofCase.AccessToken) hash ^= AccessToken.GetHashCode();
          hash ^= (int) credentialSpecifierCase_;
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (credentialSpecifierCase_ == CredentialSpecifierOneofCase.AccessToken) {
            output.WriteRawTag(10);
            output.WriteString(AccessToken);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (credentialSpecifierCase_ == CredentialSpecifierOneofCase.AccessToken) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Credentials other) {
          if (other == null) {
            return;
          }
          switch (other.CredentialSpecifierCase) {
            case CredentialSpecifierOneofCase.AccessToken:
              AccessToken = other.AccessToken;
              break;
          }

        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                AccessToken = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
