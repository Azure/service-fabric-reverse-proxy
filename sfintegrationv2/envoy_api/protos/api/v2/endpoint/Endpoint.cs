// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: endpoint.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Api.V2.Endpoint {

  /// <summary>Holder for reflection information generated from endpoint.proto</summary>
  public static partial class EndpointReflection {

    #region Descriptor
    /// <summary>File descriptor for endpoint.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EndpointReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5lbmRwb2ludC5wcm90bxIVZW52b3kuYXBpLnYyLmVuZHBvaW50Gh9lbnZv",
            "eS9hcGkvdjIvY29yZS9hZGRyZXNzLnByb3RvGhxlbnZveS9hcGkvdjIvY29y",
            "ZS9iYXNlLnByb3RvGiRlbnZveS9hcGkvdjIvY29yZS9oZWFsdGhfY2hlY2su",
            "cHJvdG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90bxoXdmFsaWRh",
            "dGUvdmFsaWRhdGUucHJvdG8aFGdvZ29wcm90by9nb2dvLnByb3RvIjcKCEVu",
            "ZHBvaW50EisKB2FkZHJlc3MYASABKAsyGi5lbnZveS5hcGkudjIuY29yZS5B",
            "ZGRyZXNzIvEBCgpMYkVuZHBvaW50EjEKCGVuZHBvaW50GAEgASgLMh8uZW52",
            "b3kuYXBpLnYyLmVuZHBvaW50LkVuZHBvaW50EjYKDWhlYWx0aF9zdGF0dXMY",
            "AiABKA4yHy5lbnZveS5hcGkudjIuY29yZS5IZWFsdGhTdGF0dXMSLQoIbWV0",
            "YWRhdGEYAyABKAsyGy5lbnZveS5hcGkudjIuY29yZS5NZXRhZGF0YRJJChVs",
            "b2FkX2JhbGFuY2luZ193ZWlnaHQYBCABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "VUludDMyVmFsdWVCDLrpwAMHKgUYgAEoASLgAQoTTG9jYWxpdHlMYkVuZHBv",
            "aW50cxItCghsb2NhbGl0eRgBIAEoCzIbLmVudm95LmFwaS52Mi5jb3JlLkxv",
            "Y2FsaXR5Ej0KDGxiX2VuZHBvaW50cxgCIAMoCzIhLmVudm95LmFwaS52Mi5l",
            "bmRwb2ludC5MYkVuZHBvaW50QgTI3h8AEkkKFWxvYWRfYmFsYW5jaW5nX3dl",
            "aWdodBgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5VSW50MzJWYWx1ZUIMuunA",
            "AwcqBRiAASgBEhAKCHByaW9yaXR5GAUgASgNQg5aCGVuZHBvaW50qOIeAWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Api.V2.Core.AddressReflection.Descriptor, global::Envoy.Api.V2.Core.BaseReflection.Descriptor, global::Envoy.Api.V2.Core.HealthCheckReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, global::Gogoproto.GogoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.Endpoint.Endpoint), global::Envoy.Api.V2.Endpoint.Endpoint.Parser, new[]{ "Address" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.Endpoint.LbEndpoint), global::Envoy.Api.V2.Endpoint.LbEndpoint.Parser, new[]{ "Endpoint", "HealthStatus", "Metadata", "LoadBalancingWeight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Api.V2.Endpoint.LocalityLbEndpoints), global::Envoy.Api.V2.Endpoint.LocalityLbEndpoints.Parser, new[]{ "Locality", "LbEndpoints", "LoadBalancingWeight", "Priority" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Upstream host identifier.
  /// </summary>
  public sealed partial class Endpoint : pb::IMessage<Endpoint> {
    private static readonly pb::MessageParser<Endpoint> _parser = new pb::MessageParser<Endpoint>(() => new Endpoint());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Endpoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Api.V2.Endpoint.EndpointReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoint(Endpoint other) : this() {
      Address = other.address_ != null ? other.Address.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Endpoint Clone() {
      return new Endpoint(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::Envoy.Api.V2.Core.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Api.V2.Core.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Endpoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Endpoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Endpoint other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          address_ = new global::Envoy.Api.V2.Core.Address();
        }
        Address.MergeFrom(other.Address);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (address_ == null) {
              address_ = new global::Envoy.Api.V2.Core.Address();
            }
            input.ReadMessage(address_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An Endpoint that Envoy can route traffic to.
  /// </summary>
  public sealed partial class LbEndpoint : pb::IMessage<LbEndpoint> {
    private static readonly pb::MessageParser<LbEndpoint> _parser = new pb::MessageParser<LbEndpoint>(() => new LbEndpoint());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LbEndpoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Api.V2.Endpoint.EndpointReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LbEndpoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LbEndpoint(LbEndpoint other) : this() {
      Endpoint = other.endpoint_ != null ? other.Endpoint.Clone() : null;
      healthStatus_ = other.healthStatus_;
      Metadata = other.metadata_ != null ? other.Metadata.Clone() : null;
      LoadBalancingWeight = other.LoadBalancingWeight;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LbEndpoint Clone() {
      return new LbEndpoint(this);
    }

    /// <summary>Field number for the "endpoint" field.</summary>
    public const int EndpointFieldNumber = 1;
    private global::Envoy.Api.V2.Endpoint.Endpoint endpoint_;
    /// <summary>
    /// Upstream host identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Api.V2.Endpoint.Endpoint Endpoint {
      get { return endpoint_; }
      set {
        endpoint_ = value;
      }
    }

    /// <summary>Field number for the "health_status" field.</summary>
    public const int HealthStatusFieldNumber = 2;
    private global::Envoy.Api.V2.Core.HealthStatus healthStatus_ = 0;
    /// <summary>
    /// [#not-implemented-hide:] Optional health status when known and supplied by
    /// EDS server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Api.V2.Core.HealthStatus HealthStatus {
      get { return healthStatus_; }
      set {
        healthStatus_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 3;
    private global::Envoy.Api.V2.Core.Metadata metadata_;
    /// <summary>
    /// The endpoint metadata specifies values that may be used by the load
    /// balancer to select endpoints in a cluster for a given request. The filter
    /// name should be specified as *envoy.lb*. An example boolean key-value pair
    /// is *canary*, providing the optional canary status of the upstream host.
    /// This may be matched against in a route's ForwardAction metadata_match field
    /// to subset the endpoints considered in cluster load balancing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Api.V2.Core.Metadata Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "load_balancing_weight" field.</summary>
    public const int LoadBalancingWeightFieldNumber = 4;
    private static readonly pb::FieldCodec<uint?> _single_loadBalancingWeight_codec = pb::FieldCodec.ForStructWrapper<uint>(34);
    private uint? loadBalancingWeight_;
    /// <summary>
    /// The optional load balancing weight of the upstream host, in the range 1 -
    /// 128. Envoy uses the load balancing weight in some of the built in load
    /// balancers. The load balancing weight for an endpoint is divided by the sum
    /// of the weights of all endpoints in the endpoint's locality to produce a
    /// percentage of traffic for the endpoint. This percentage is then further
    /// weighted by the endpoint's locality's load balancing weight from
    /// LocalityLbEndpoints. If unspecified, each host is presumed to have equal
    /// weight in a locality.
    ///
    /// .. attention::
    ///
    ///   The limit of 128 is somewhat arbitrary, but is applied due to performance
    ///   concerns with the current implementation and can be removed when
    ///   `this issue &lt;https://github.com/envoyproxy/envoy/issues/1285>`_ is fixed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint? LoadBalancingWeight {
      get { return loadBalancingWeight_; }
      set {
        loadBalancingWeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LbEndpoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LbEndpoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Endpoint, other.Endpoint)) return false;
      if (HealthStatus != other.HealthStatus) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (LoadBalancingWeight != other.LoadBalancingWeight) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (endpoint_ != null) hash ^= Endpoint.GetHashCode();
      if (HealthStatus != 0) hash ^= HealthStatus.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (loadBalancingWeight_ != null) hash ^= LoadBalancingWeight.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (endpoint_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Endpoint);
      }
      if (HealthStatus != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) HealthStatus);
      }
      if (metadata_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Metadata);
      }
      if (loadBalancingWeight_ != null) {
        _single_loadBalancingWeight_codec.WriteTagAndValue(output, LoadBalancingWeight);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (endpoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Endpoint);
      }
      if (HealthStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HealthStatus);
      }
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (loadBalancingWeight_ != null) {
        size += _single_loadBalancingWeight_codec.CalculateSizeWithTag(LoadBalancingWeight);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LbEndpoint other) {
      if (other == null) {
        return;
      }
      if (other.endpoint_ != null) {
        if (endpoint_ == null) {
          endpoint_ = new global::Envoy.Api.V2.Endpoint.Endpoint();
        }
        Endpoint.MergeFrom(other.Endpoint);
      }
      if (other.HealthStatus != 0) {
        HealthStatus = other.HealthStatus;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          metadata_ = new global::Envoy.Api.V2.Core.Metadata();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.loadBalancingWeight_ != null) {
        if (loadBalancingWeight_ == null || other.LoadBalancingWeight != 0) {
          LoadBalancingWeight = other.LoadBalancingWeight;
        }
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (endpoint_ == null) {
              endpoint_ = new global::Envoy.Api.V2.Endpoint.Endpoint();
            }
            input.ReadMessage(endpoint_);
            break;
          }
          case 16: {
            healthStatus_ = (global::Envoy.Api.V2.Core.HealthStatus) input.ReadEnum();
            break;
          }
          case 26: {
            if (metadata_ == null) {
              metadata_ = new global::Envoy.Api.V2.Core.Metadata();
            }
            input.ReadMessage(metadata_);
            break;
          }
          case 34: {
            uint? value = _single_loadBalancingWeight_codec.Read(input);
            if (loadBalancingWeight_ == null || value != 0) {
              LoadBalancingWeight = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A group of endpoints belonging to a Locality.
  /// One can have multiple LocalityLbEndpoints for a locality, but this is
  /// generally only done if the different groups need to have different load
  /// balancing weights or different priorities.
  /// </summary>
  public sealed partial class LocalityLbEndpoints : pb::IMessage<LocalityLbEndpoints> {
    private static readonly pb::MessageParser<LocalityLbEndpoints> _parser = new pb::MessageParser<LocalityLbEndpoints>(() => new LocalityLbEndpoints());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocalityLbEndpoints> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Api.V2.Endpoint.EndpointReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocalityLbEndpoints() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocalityLbEndpoints(LocalityLbEndpoints other) : this() {
      Locality = other.locality_ != null ? other.Locality.Clone() : null;
      lbEndpoints_ = other.lbEndpoints_.Clone();
      LoadBalancingWeight = other.LoadBalancingWeight;
      priority_ = other.priority_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocalityLbEndpoints Clone() {
      return new LocalityLbEndpoints(this);
    }

    /// <summary>Field number for the "locality" field.</summary>
    public const int LocalityFieldNumber = 1;
    private global::Envoy.Api.V2.Core.Locality locality_;
    /// <summary>
    /// Identifies location of where the upstream hosts run.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Api.V2.Core.Locality Locality {
      get { return locality_; }
      set {
        locality_ = value;
      }
    }

    /// <summary>Field number for the "lb_endpoints" field.</summary>
    public const int LbEndpointsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Envoy.Api.V2.Endpoint.LbEndpoint> _repeated_lbEndpoints_codec
        = pb::FieldCodec.ForMessage(18, global::Envoy.Api.V2.Endpoint.LbEndpoint.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Api.V2.Endpoint.LbEndpoint> lbEndpoints_ = new pbc::RepeatedField<global::Envoy.Api.V2.Endpoint.LbEndpoint>();
    /// <summary>
    /// The group of endpoints belonging to the locality specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Envoy.Api.V2.Endpoint.LbEndpoint> LbEndpoints {
      get { return lbEndpoints_; }
    }

    /// <summary>Field number for the "load_balancing_weight" field.</summary>
    public const int LoadBalancingWeightFieldNumber = 3;
    private static readonly pb::FieldCodec<uint?> _single_loadBalancingWeight_codec = pb::FieldCodec.ForStructWrapper<uint>(26);
    private uint? loadBalancingWeight_;
    /// <summary>
    /// Optional: Per priority/region/zone/sub_zone weight - range 1-128. The load
    /// balancing weight for a locality is divided by the sum of the weights of all
    /// localities  at the same priority level to produce the effective percentage
    /// of traffic for the locality.
    ///
    /// Weights must be specified for either all localities in a given priority
    /// level or none.
    ///
    /// If unspecified, each locality is presumed to have equal weight in a
    /// cluster.
    ///
    /// .. attention::
    ///
    ///   The limit of 128 is somewhat arbitrary, but is applied due to performance
    ///   concerns with the current implementation and can be removed when
    ///   `this issue &lt;https://github.com/envoyproxy/envoy/issues/1285>`_ is fixed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint? LoadBalancingWeight {
      get { return loadBalancingWeight_; }
      set {
        loadBalancingWeight_ = value;
      }
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 5;
    private uint priority_;
    /// <summary>
    /// Optional: the priority for this LocalityLbEndpoints. If unspecified this will
    /// default to the highest priority (0).
    ///
    /// Under usual circumstances, Envoy will only select endpoints for the highest
    /// priority (0). In the event all endpoints for a particular priority are
    /// unavailable/unhealthy, Envoy will fail over to selecting endpoints for the
    /// next highest priority group.
    ///
    /// Priorities should range from 0 (highest) to N (lowest) without skipping.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocalityLbEndpoints);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocalityLbEndpoints other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Locality, other.Locality)) return false;
      if(!lbEndpoints_.Equals(other.lbEndpoints_)) return false;
      if (LoadBalancingWeight != other.LoadBalancingWeight) return false;
      if (Priority != other.Priority) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (locality_ != null) hash ^= Locality.GetHashCode();
      hash ^= lbEndpoints_.GetHashCode();
      if (loadBalancingWeight_ != null) hash ^= LoadBalancingWeight.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (locality_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Locality);
      }
      lbEndpoints_.WriteTo(output, _repeated_lbEndpoints_codec);
      if (loadBalancingWeight_ != null) {
        _single_loadBalancingWeight_codec.WriteTagAndValue(output, LoadBalancingWeight);
      }
      if (Priority != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Priority);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (locality_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Locality);
      }
      size += lbEndpoints_.CalculateSize(_repeated_lbEndpoints_codec);
      if (loadBalancingWeight_ != null) {
        size += _single_loadBalancingWeight_codec.CalculateSizeWithTag(LoadBalancingWeight);
      }
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Priority);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocalityLbEndpoints other) {
      if (other == null) {
        return;
      }
      if (other.locality_ != null) {
        if (locality_ == null) {
          locality_ = new global::Envoy.Api.V2.Core.Locality();
        }
        Locality.MergeFrom(other.Locality);
      }
      lbEndpoints_.Add(other.lbEndpoints_);
      if (other.loadBalancingWeight_ != null) {
        if (loadBalancingWeight_ == null || other.LoadBalancingWeight != 0) {
          LoadBalancingWeight = other.LoadBalancingWeight;
        }
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (locality_ == null) {
              locality_ = new global::Envoy.Api.V2.Core.Locality();
            }
            input.ReadMessage(locality_);
            break;
          }
          case 18: {
            lbEndpoints_.AddEntriesFrom(input, _repeated_lbEndpoints_codec);
            break;
          }
          case 26: {
            uint? value = _single_loadBalancingWeight_codec.Read(input);
            if (loadBalancingWeight_ == null || value != 0) {
              LoadBalancingWeight = value;
            }
            break;
          }
          case 40: {
            Priority = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
