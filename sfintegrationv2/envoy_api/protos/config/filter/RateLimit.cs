// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: http/rate_limit/v2/rate_limit.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Config.Filter.Http.RateLimit.V2 {

  /// <summary>Holder for reflection information generated from http/rate_limit/v2/rate_limit.proto</summary>
  public static partial class RateLimitReflection {

    #region Descriptor
    /// <summary>File descriptor for http/rate_limit/v2/rate_limit.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RateLimitReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNodHRwL3JhdGVfbGltaXQvdjIvcmF0ZV9saW1pdC5wcm90bxImZW52b3ku",
            "Y29uZmlnLmZpbHRlci5odHRwLnJhdGVfbGltaXQudjIaHmdvb2dsZS9wcm90",
            "b2J1Zi9kdXJhdGlvbi5wcm90bxoXdmFsaWRhdGUvdmFsaWRhdGUucHJvdG8a",
            "FGdvZ29wcm90by9nb2dvLnByb3RvIogBCglSYXRlTGltaXQSGQoGZG9tYWlu",
            "GAEgASgJQgm66cADBHICIAESGAoFc3RhZ2UYAiABKA1CCbrpwAMEKgIYChIU",
            "CgxyZXF1ZXN0X3R5cGUYAyABKAkSMAoHdGltZW91dBgEIAEoCzIZLmdvb2ds",
            "ZS5wcm90b2J1Zi5EdXJhdGlvbkIEmN8fAUIEWgJ2MmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, global::Gogoproto.GogoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Config.Filter.Http.RateLimit.V2.RateLimit), global::Envoy.Config.Filter.Http.RateLimit.V2.RateLimit.Parser, new[]{ "Domain", "Stage", "RequestType", "Timeout" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RateLimit : pb::IMessage<RateLimit> {
    private static readonly pb::MessageParser<RateLimit> _parser = new pb::MessageParser<RateLimit>(() => new RateLimit());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RateLimit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Config.Filter.Http.RateLimit.V2.RateLimitReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateLimit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateLimit(RateLimit other) : this() {
      domain_ = other.domain_;
      stage_ = other.stage_;
      requestType_ = other.requestType_;
      Timeout = other.timeout_ != null ? other.Timeout.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateLimit Clone() {
      return new RateLimit(this);
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 1;
    private string domain_ = "";
    /// <summary>
    /// The rate limit domain to use when calling the rate limit service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 2;
    private uint stage_;
    /// <summary>
    /// Specifies the rate limit configurations to be applied with the same
    /// stage number. If not set, the default stage number is 0.
    ///
    /// .. note::
    ///
    ///  The filter supports a range of 0 - 10 inclusively for stage numbers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Stage {
      get { return stage_; }
      set {
        stage_ = value;
      }
    }

    /// <summary>Field number for the "request_type" field.</summary>
    public const int RequestTypeFieldNumber = 3;
    private string requestType_ = "";
    /// <summary>
    /// The type of requests the filter should apply to. The supported
    /// types are *internal*, *external* or *both*. A request is considered internal if
    /// :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal>` is set to true. If
    /// :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal>` is not set or false, a
    /// request is considered external. The filter defaults to *both*, and it will apply to all request
    /// types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestType {
      get { return requestType_; }
      set {
        requestType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Duration timeout_;
    /// <summary>
    /// The timeout in milliseconds for the rate limit service RPC. If not
    /// set, this defaults to 20ms.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RateLimit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RateLimit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Domain != other.Domain) return false;
      if (Stage != other.Stage) return false;
      if (RequestType != other.RequestType) return false;
      if (!object.Equals(Timeout, other.Timeout)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      if (Stage != 0) hash ^= Stage.GetHashCode();
      if (RequestType.Length != 0) hash ^= RequestType.GetHashCode();
      if (timeout_ != null) hash ^= Timeout.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Domain.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Domain);
      }
      if (Stage != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Stage);
      }
      if (RequestType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RequestType);
      }
      if (timeout_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Timeout);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (Stage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Stage);
      }
      if (RequestType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestType);
      }
      if (timeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timeout);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RateLimit other) {
      if (other == null) {
        return;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      if (other.Stage != 0) {
        Stage = other.Stage;
      }
      if (other.RequestType.Length != 0) {
        RequestType = other.RequestType;
      }
      if (other.timeout_ != null) {
        if (timeout_ == null) {
          timeout_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Timeout.MergeFrom(other.Timeout);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Domain = input.ReadString();
            break;
          }
          case 16: {
            Stage = input.ReadUInt32();
            break;
          }
          case 26: {
            RequestType = input.ReadString();
            break;
          }
          case 34: {
            if (timeout_ == null) {
              timeout_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(timeout_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
