// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: load_stats/v2/lrs.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Envoy.Service.LoadStats.V2 {

  /// <summary>Holder for reflection information generated from load_stats/v2/lrs.proto</summary>
  public static partial class LrsReflection {

    #region Descriptor
    /// <summary>File descriptor for load_stats/v2/lrs.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LrsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdsb2FkX3N0YXRzL3YyL2xycy5wcm90bxIbZW52b3kuc2VydmljZS5sb2Fk",
            "X3N0YXRzLnYyGhxlbnZveS9hcGkvdjIvY29yZS9iYXNlLnByb3RvGidlbnZv",
            "eS9hcGkvdjIvZW5kcG9pbnQvbG9hZF9yZXBvcnQucHJvdG8aHmdvb2dsZS9w",
            "cm90b2J1Zi9kdXJhdGlvbi5wcm90bxoXdmFsaWRhdGUvdmFsaWRhdGUucHJv",
            "dG8idQoQTG9hZFN0YXRzUmVxdWVzdBIlCgRub2RlGAEgASgLMhcuZW52b3ku",
            "YXBpLnYyLmNvcmUuTm9kZRI6Cg1jbHVzdGVyX3N0YXRzGAIgAygLMiMuZW52",
            "b3kuYXBpLnYyLmVuZHBvaW50LkNsdXN0ZXJTdGF0cyJtChFMb2FkU3RhdHNS",
            "ZXNwb25zZRIcCghjbHVzdGVycxgBIAMoCUIKuunAAwWSAQIIARI6Chdsb2Fk",
            "X3JlcG9ydGluZ19pbnRlcnZhbBgCIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5E",
            "dXJhdGlvbjKOAQoUTG9hZFJlcG9ydGluZ1NlcnZpY2USdgoPU3RyZWFtTG9h",
            "ZFN0YXRzEi0uZW52b3kuc2VydmljZS5sb2FkX3N0YXRzLnYyLkxvYWRTdGF0",
            "c1JlcXVlc3QaLi5lbnZveS5zZXJ2aWNlLmxvYWRfc3RhdHMudjIuTG9hZFN0",
            "YXRzUmVzcG9uc2UiACgBMAFCBFoCdjJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Envoy.Api.V2.Core.BaseReflection.Descriptor, global::Envoy.Api.V2.Endpoint.LoadReportReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.LoadStats.V2.LoadStatsRequest), global::Envoy.Service.LoadStats.V2.LoadStatsRequest.Parser, new[]{ "Node", "ClusterStats" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Envoy.Service.LoadStats.V2.LoadStatsResponse), global::Envoy.Service.LoadStats.V2.LoadStatsResponse.Parser, new[]{ "Clusters", "LoadReportingInterval" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A load report Envoy sends to the management server.
  /// [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.
  /// </summary>
  public sealed partial class LoadStatsRequest : pb::IMessage<LoadStatsRequest> {
    private static readonly pb::MessageParser<LoadStatsRequest> _parser = new pb::MessageParser<LoadStatsRequest>(() => new LoadStatsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadStatsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Service.LoadStats.V2.LrsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatsRequest(LoadStatsRequest other) : this() {
      Node = other.node_ != null ? other.Node.Clone() : null;
      clusterStats_ = other.clusterStats_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatsRequest Clone() {
      return new LoadStatsRequest(this);
    }

    /// <summary>Field number for the "node" field.</summary>
    public const int NodeFieldNumber = 1;
    private global::Envoy.Api.V2.Core.Node node_;
    /// <summary>
    /// Node identifier for Envoy instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Envoy.Api.V2.Core.Node Node {
      get { return node_; }
      set {
        node_ = value;
      }
    }

    /// <summary>Field number for the "cluster_stats" field.</summary>
    public const int ClusterStatsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Envoy.Api.V2.Endpoint.ClusterStats> _repeated_clusterStats_codec
        = pb::FieldCodec.ForMessage(18, global::Envoy.Api.V2.Endpoint.ClusterStats.Parser);
    private readonly pbc::RepeatedField<global::Envoy.Api.V2.Endpoint.ClusterStats> clusterStats_ = new pbc::RepeatedField<global::Envoy.Api.V2.Endpoint.ClusterStats>();
    /// <summary>
    /// A list of load stats to report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Envoy.Api.V2.Endpoint.ClusterStats> ClusterStats {
      get { return clusterStats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadStatsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadStatsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Node, other.Node)) return false;
      if(!clusterStats_.Equals(other.clusterStats_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (node_ != null) hash ^= Node.GetHashCode();
      hash ^= clusterStats_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (node_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Node);
      }
      clusterStats_.WriteTo(output, _repeated_clusterStats_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (node_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Node);
      }
      size += clusterStats_.CalculateSize(_repeated_clusterStats_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadStatsRequest other) {
      if (other == null) {
        return;
      }
      if (other.node_ != null) {
        if (node_ == null) {
          node_ = new global::Envoy.Api.V2.Core.Node();
        }
        Node.MergeFrom(other.Node);
      }
      clusterStats_.Add(other.clusterStats_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (node_ == null) {
              node_ = new global::Envoy.Api.V2.Core.Node();
            }
            input.ReadMessage(node_);
            break;
          }
          case 18: {
            clusterStats_.AddEntriesFrom(input, _repeated_clusterStats_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The management server sends envoy a LoadStatsResponse with all clusters it
  /// is interested in learning load stats about.
  /// [#not-implemented-hide:] Not configuration. TBD how to doc proto APIs.
  /// </summary>
  public sealed partial class LoadStatsResponse : pb::IMessage<LoadStatsResponse> {
    private static readonly pb::MessageParser<LoadStatsResponse> _parser = new pb::MessageParser<LoadStatsResponse>(() => new LoadStatsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadStatsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Envoy.Service.LoadStats.V2.LrsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatsResponse(LoadStatsResponse other) : this() {
      clusters_ = other.clusters_.Clone();
      LoadReportingInterval = other.loadReportingInterval_ != null ? other.LoadReportingInterval.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatsResponse Clone() {
      return new LoadStatsResponse(this);
    }

    /// <summary>Field number for the "clusters" field.</summary>
    public const int ClustersFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_clusters_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> clusters_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Clusters to report stats for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Clusters {
      get { return clusters_; }
    }

    /// <summary>Field number for the "load_reporting_interval" field.</summary>
    public const int LoadReportingIntervalFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Duration loadReportingInterval_;
    /// <summary>
    /// The interval of time to collect stats. The default is 10 seconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration LoadReportingInterval {
      get { return loadReportingInterval_; }
      set {
        loadReportingInterval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadStatsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadStatsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!clusters_.Equals(other.clusters_)) return false;
      if (!object.Equals(LoadReportingInterval, other.LoadReportingInterval)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= clusters_.GetHashCode();
      if (loadReportingInterval_ != null) hash ^= LoadReportingInterval.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      clusters_.WriteTo(output, _repeated_clusters_codec);
      if (loadReportingInterval_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LoadReportingInterval);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += clusters_.CalculateSize(_repeated_clusters_codec);
      if (loadReportingInterval_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoadReportingInterval);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadStatsResponse other) {
      if (other == null) {
        return;
      }
      clusters_.Add(other.clusters_);
      if (other.loadReportingInterval_ != null) {
        if (loadReportingInterval_ == null) {
          loadReportingInterval_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        LoadReportingInterval.MergeFrom(other.LoadReportingInterval);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            clusters_.AddEntriesFrom(input, _repeated_clusters_codec);
            break;
          }
          case 18: {
            if (loadReportingInterval_ == null) {
              loadReportingInterval_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(loadReportingInterval_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
